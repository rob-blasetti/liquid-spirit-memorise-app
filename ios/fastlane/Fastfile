default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Print environment variables to verify they load correctly (optional)
    UI.message "ðŸš€ Using API_URL: #{ENV['API_URL']}"

    # Authenticate with App Store Connect via API key (recommended for CI).
    # Prefer file path when provided to avoid OpenSSL curve issues on CI.
    api_key = if ENV['ASC_KEY_PATH'] && File.exist?(ENV['ASC_KEY_PATH'])
      app_store_connect_api_key(
        key_id: ENV['ASC_KEY_ID'],
        issuer_id: ENV['ASC_ISSUER_ID'],
        key_filepath: ENV['ASC_KEY_PATH']
      )
    else
      app_store_connect_api_key(
        key_id: ENV['ASC_KEY_ID'],
        issuer_id: ENV['ASC_ISSUER_ID'],
        key_content: ENV['ASC_KEY_CONTENT'],
        is_key_content_base64: true
      )
    end

    sh "mkdir -p ios"
    sh "touch ios/Config.xcconfig"
    
    # 1. Pull down/update provisioning profiles & certificates from your signing repo
    match(
      type: "appstore",
      git_url: "git@github.com:rob-blasetti/signing-repo.git",
      app_identifier: "com.liquidspirit.nuri",
      readonly: true,
      api_key: api_key
    )

    # 2. Increment build number
    increment_build_number(
      xcodeproj: "liquid_spirit_memorise.xcodeproj"
    )

    # 3. Inject Environment Variables into Xcode

    # 4. Build the app
    build_app(
      workspace: "liquid_spirit_memorise.xcworkspace",
      scheme: "liquid_spirit_memorise",
      export_method: "app-store"
    )

    # 5. Upload to TestFlight
    upload_to_testflight(api_key: api_key)
  end
end
