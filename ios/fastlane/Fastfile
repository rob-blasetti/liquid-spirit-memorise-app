env_file = File.expand_path('../../.env', __dir__)
if File.exist?(env_file)
  File.foreach(env_file) do |line|
    stripped = line.strip
    next if stripped.empty? || stripped.start_with?('#')
    key_part, value = stripped.split('=', 2)
    next unless key_part && value
    key = key_part.sub(/\Aexport\s+/i, '').strip
    value = value.strip.gsub(/\A['"]|['"]\Z/, '')
    ENV[key] = value unless ENV.key?(key)
  end
end

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Print environment variables to verify they load correctly (optional)
    UI.message "ðŸš€ Using API_URL: #{ENV['API_URL']}"

    # Authenticate to Apple using Appfile credentials (no API key)

    sh "mkdir -p ios"
    sh "touch ios/Config.xcconfig"
    
    # 1. Pull down/update provisioning profiles & certificates from your signing repo
    match(
      type: "appstore",
      git_url: "git@github.com:rob-blasetti/signing-repo.git",
      app_identifier: "com.liquidspirit.nuri",
      readonly: true
    )

    # 2. Increment build number
    increment_build_number(
      xcodeproj: "liquid_spirit_memorise.xcodeproj"
    )

    # 3. Inject Environment Variables into Xcode

    # 4. Build the app
    build_app(
      workspace: "liquid_spirit_memorise.xcworkspace",
      scheme: "liquid_spirit_memorise",
      export_method: "app-store"
    )

    # 5. Upload to TestFlight
    upload_to_testflight(
      api_key: app_store_connect_api_key(
      key_id: ENV['ASC_KEY_ID'],
      issuer_id: ENV['ASC_ISSUER_ID'],
      key_filepath: ENV['ASC_KEY_FILE']
    )
  )
  end

  desc "Dry run of beta lane without side effects"
  lane :beta_dry do
    UI.message "[DRY RUN] ðŸš€ Using API_URL: #{ENV['API_URL']}"
    UI.message "[DRY RUN] Authenticate with App Store Connect via API key (ASC_KEY_* envs)"
    UI.message "[DRY RUN] match(appstore) with signing repo, readonly"
    UI.message "[DRY RUN] increment_build_number on liquid_spirit_memorise.xcodeproj"
    UI.message "[DRY RUN] build_app workspace: liquid_spirit_memorise.xcworkspace, scheme: liquid_spirit_memorise"
    UI.message "[DRY RUN] upload_to_testflight"
    UI.success "[DRY RUN] Completed beta steps successfully"
  end
end
